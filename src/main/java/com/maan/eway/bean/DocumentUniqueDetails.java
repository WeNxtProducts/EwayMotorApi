/* 
*  Copyright (c) 2019. All right reserved
 * Created on 2024-06-19 ( Date ISO 2024-06-19 - Time 16:51:16 )
 * Generated by Telosys Tools Generator ( version 3.3.0 )
 */

/*
 * Created on 2024-06-19 ( 16:51:16 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */


package com.maan.eway.bean;


import java.io.Serializable;
import java.util.Date;
import java.util.List;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.IdClass;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;




/**
* Domain class for entity "DocumentUniqueDetails"
*
* @author Telosys Tools Generator
*
*/
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@ToString
@Entity
@DynamicInsert
@DynamicUpdate
@Builder
@IdClass(DocumentUniqueDetailsId.class)
@Table(name="document_unique_details")


public class DocumentUniqueDetails implements Serializable {
 
private static final long serialVersionUID = 1L;
 
    //--- ENTITY PRIMARY KEY 
    @Id
    @Column(name="ID", nullable=false, length=20)
    private String     id ;

    @Id
    @Column(name="ID_TYPE", nullable=false, length=100)
    private String     idType ;

    @Id
    @Column(name="UNIQUE_ID", nullable=false)
    private Integer    uniqueId ;

    //--- ENTITY DATA FIELDS 
    @Column(name="PRODUCT_TYPE", nullable=false, length=100)
    private String     productType ;

    @Column(name="DOCUMENT_ID")
    private Integer    documentId ;

    @Column(name="DOC_APPLICABLE_ID", nullable=false, length=100)
    private String     docApplicableId ;

    @Column(name="DOC_APPLICABLE", nullable=false, length=100)
    private String     docApplicable ;

    @Column(name="DOCUMENT_NAME", length=100)
    private String     documentName ;

    @Column(name="DOCUMENT_DESC", length=100)
    private String     documentDesc ;

    @Column(name="DOCUMENT_TYPE", nullable=false, length=100)
    private String     documentType ;

    @Column(name="DOCUMENT_TYPE_DESC", nullable=false, length=100)
    private String     documentTypeDesc ;

    @Temporal(TemporalType.DATE)
    @Column(name="UPLOADED_TIME")
    private Date       uploadedTime ;

    @Column(name="FILE_PATH_ORGINAL", length=100)
    private String     filePathOrginal ;

    @Column(name="FILE_PATH_BACKUP", length=100)
    private String     filePathBackup ;

    @Column(name="FILE_NAME", length=100)
    private String     fileName ;

    @Column(name="ORGINAL_FILE_NAME", length=100)
    private String     orginalFileName ;

    @Column(name="UPLOADED_BY", length=100)
    private String     uploadedBy ;

    @Column(name="STATUS", length=10)
    private String     status ;

    @Temporal(TemporalType.DATE)
    @Column(name="ENTRY_DATE")
    private Date       entryDate ;

    @Column(name="EMI_YN", length=2)
    private String     emiYn ;

    @Column(name="INSTALLMENT_PERIOD", length=100)
    private String     installmentPeriod ;

    @Column(name="NO_OF_INSTALLMENT", length=10)
    private String     noOfInstallment ;

    @Column(name="VERIFIED_YN", length=2)
    private String     verifiedYn ;


    //--- ENTITY LINKS ( RELATIONSHIP )
    @OneToMany(mappedBy="documentUniqueDetails")
    private List<DocumentTransactionDetails> listOfDocumentTransactionDetails ; 



}



